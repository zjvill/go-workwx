// Code generated by sdkcodegen; DO NOT EDIT.

package workwx

// execGetAccessToken 获取access_token
func (c *WorkwxApp) execGetAccessToken(req reqAccessToken) (respAccessToken, error) {
	var resp respAccessToken
	err := executeQyapiGet(c, "/cgi-bin/gettoken", req, &resp, false)
	if err != nil {
		return respAccessToken{}, err
	}

	return resp, nil
}

// execGetJSAPITicket 获取企业的jsapi_ticket
func (c *WorkwxApp) execGetJSAPITicket(req reqJSAPITicket) (respJSAPITicket, error) {
	var resp respJSAPITicket
	err := executeQyapiGet(c, "/cgi-bin/get_jsapi_ticket", req, &resp, true)
	if err != nil {
		return respJSAPITicket{}, err
	}

	return resp, nil
}

// execGetJSAPITicketAgentConfig 获取应用的jsapi_ticket
func (c *WorkwxApp) execGetJSAPITicketAgentConfig(req reqJSAPITicketAgentConfig) (respJSAPITicket, error) {
	var resp respJSAPITicket
	err := executeQyapiGet(c, "/cgi-bin/ticket/get", req, &resp, true)
	if err != nil {
		return respJSAPITicket{}, err
	}

	return resp, nil
}

// execJSCode2Session 临时登录凭证校验code2Session
func (c *WorkwxApp) execJSCode2Session(req reqJSCode2Session) (respJSCode2Session, error) {
	var resp respJSCode2Session
	err := executeQyapiGet(c, "/cgi-bin/miniprogram/jscode2session", req, &resp, true)
	if err != nil {
		return respJSCode2Session{}, err
	}

	return resp, nil
}

// execAuthCode2UserInfo 获取访问用户身份
func (c *WorkwxApp) execAuthCode2UserInfo(req reqAuthCode2UserInfo) (respAuthCode2UserInfo, error) {
	var resp respAuthCode2UserInfo
	err := executeQyapiGet(c, "/cgi-bin/auth/getuserinfo", req, &resp, true)
	if err != nil {
		return respAuthCode2UserInfo{}, err
	}

	return resp, nil
}

// execUserGet 读取成员
func (c *WorkwxApp) execUserGet(req reqUserGet) (respUserGet, error) {
	var resp respUserGet
	err := executeQyapiGet(c, "/cgi-bin/user/get", req, &resp, true)
	if err != nil {
		return respUserGet{}, err
	}

	return resp, nil
}

// execUserUpdate 更新成员
func (c *WorkwxApp) execUserUpdate(req reqUserUpdate) (respUserUpdate, error) {
	var resp respUserUpdate
	err := executeQyapiJSONPost(c, "/cgi-bin/user/update", req, &resp, true)
	if err != nil {
		return respUserUpdate{}, err
	}

	return resp, nil
}

// execUserList 获取部门成员详情
func (c *WorkwxApp) execUserList(req reqUserList) (respUserList, error) {
	var resp respUserList
	err := executeQyapiGet(c, "/cgi-bin/user/list", req, &resp, true)
	if err != nil {
		return respUserList{}, err
	}

	return resp, nil
}

// execConvertUserIDToOpenID userid转openid
func (c *WorkwxApp) execConvertUserIDToOpenID(req reqConvertUserIDToOpenID) (respConvertUserIDToOpenID, error) {
	var resp respConvertUserIDToOpenID
	err := executeQyapiJSONPost(c, "/cgi-bin/user/convert_to_openid", req, &resp, true)
	if err != nil {
		return respConvertUserIDToOpenID{}, err
	}

	return resp, nil
}

// execConvertOpenIDToUserID openid转userid
func (c *WorkwxApp) execConvertOpenIDToUserID(req reqConvertOpenIDToUserID) (respConvertOpenIDToUserID, error) {
	var resp respConvertOpenIDToUserID
	err := executeQyapiJSONPost(c, "/cgi-bin/user/convert_to_userid", req, &resp, true)
	if err != nil {
		return respConvertOpenIDToUserID{}, err
	}

	return resp, nil
}

// execUserJoinQrcode 获取加入企业二维码
func (c *WorkwxApp) execUserJoinQrcode(req reqUserJoinQrcode) (respUserJoinQrcode, error) {
	var resp respUserJoinQrcode
	err := executeQyapiGet(c, "/cgi-bin/corp/get_join_qrcode", req, &resp, true)
	if err != nil {
		return respUserJoinQrcode{}, err
	}

	return resp, nil
}

// execUserIDByMobile 手机号获取userid
func (c *WorkwxApp) execUserIDByMobile(req reqUserIDByMobile) (respUserIDByMobile, error) {
	var resp respUserIDByMobile
	err := executeQyapiJSONPost(c, "/cgi-bin/user/getuserid", req, &resp, true)
	if err != nil {
		return respUserIDByMobile{}, err
	}

	return resp, nil
}

// execUserIDByEmail 邮箱获取userid
func (c *WorkwxApp) execUserIDByEmail(req reqUserIDByEmail) (respUserIDByEmail, error) {
	var resp respUserIDByEmail
	err := executeQyapiJSONPost(c, "/cgi-bin/user/get_userid_by_email", req, &resp, true)
	if err != nil {
		return respUserIDByEmail{}, err
	}

	return resp, nil
}

// execDeptCreate 创建部门
func (c *WorkwxApp) execDeptCreate(req reqDeptCreate) (respDeptCreate, error) {
	var resp respDeptCreate
	err := executeQyapiJSONPost(c, "/cgi-bin/department/create", req, &resp, true)
	if err != nil {
		return respDeptCreate{}, err
	}

	return resp, nil
}

// execDeptList 获取部门列表
func (c *WorkwxApp) execDeptList(req reqDeptList) (respDeptList, error) {
	var resp respDeptList
	err := executeQyapiGet(c, "/cgi-bin/department/list", req, &resp, true)
	if err != nil {
		return respDeptList{}, err
	}

	return resp, nil
}

// execDeptSimpleList 获取子部门ID列表
func (c *WorkwxApp) execDeptSimpleList(req reqDeptSimpleList) (respDeptSimpleList, error) {
	var resp respDeptSimpleList
	err := executeQyapiGet(c, "/cgi-bin/department/simplelist", req, &resp, true)
	if err != nil {
		return respDeptSimpleList{}, err
	}

	return resp, nil
}

// execUserInfoGet 获取访问用户身份
func (c *WorkwxApp) execUserInfoGet(req reqUserInfoGet) (respUserInfoGet, error) {
	var resp respUserInfoGet
	err := executeQyapiGet(c, "/cgi-bin/user/getuserinfo", req, &resp, true)
	if err != nil {
		return respUserInfoGet{}, err
	}

	return resp, nil
}

// execExternalContactList 获取客户列表
func (c *WorkwxApp) execExternalContactList(req reqExternalContactList) (respExternalContactList, error) {
	var resp respExternalContactList
	err := executeQyapiGet(c, "/cgi-bin/externalcontact/list", req, &resp, true)
	if err != nil {
		return respExternalContactList{}, err
	}

	return resp, nil
}

// execExternalContactGet 获取客户详情
func (c *WorkwxApp) execExternalContactGet(req reqExternalContactGet) (respExternalContactGet, error) {
	var resp respExternalContactGet
	err := executeQyapiGet(c, "/cgi-bin/externalcontact/get", req, &resp, true)
	if err != nil {
		return respExternalContactGet{}, err
	}

	return resp, nil
}

// execExternalContactBatchList 批量获取客户详情
func (c *WorkwxApp) execExternalContactBatchList(req reqExternalContactBatchList) (respExternalContactBatchList, error) {
	var resp respExternalContactBatchList
	err := executeQyapiJSONPost(c, "/cgi-bin/externalcontact/batch/get_by_user", req, &resp, true)
	if err != nil {
		return respExternalContactBatchList{}, err
	}

	return resp, nil
}

// execExternalContactRemark 修改客户备注信息
func (c *WorkwxApp) execExternalContactRemark(req reqExternalContactRemark) (respExternalContactRemark, error) {
	var resp respExternalContactRemark
	err := executeQyapiJSONPost(c, "/cgi-bin/externalcontact/remark", req, &resp, true)
	if err != nil {
		return respExternalContactRemark{}, err
	}

	return resp, nil
}

// execExternalContactCustomerAcquisition 获取获客客户列表
func (c *WorkwxApp) execExternalContactCustomerAcquisition(req reqExternalContactCustomerAcquisition) (respExternalContactCustomerAcquisition, error) {
	var resp respExternalContactCustomerAcquisition
	err := executeQyapiJSONPost(c, "/cgi-bin/externalcontact/customer_acquisition/customer", req, &resp, true)
	if err != nil {
		return respExternalContactCustomerAcquisition{}, err
	}

	return resp, nil
}

// execExternalContactListCorpTags 获取企业标签库
func (c *WorkwxApp) execExternalContactListCorpTags(req reqExternalContactListCorpTags) (respExternalContactListCorpTags, error) {
	var resp respExternalContactListCorpTags
	err := executeQyapiJSONPost(c, "/cgi-bin/externalcontact/get_corp_tag_list", req, &resp, true)
	if err != nil {
		return respExternalContactListCorpTags{}, err
	}

	return resp, nil
}

// execExternalContactAddCorpTag 添加企业客户标签
func (c *WorkwxApp) execExternalContactAddCorpTag(req reqExternalContactAddCorpTagGroup) (respExternalContactAddCorpTag, error) {
	var resp respExternalContactAddCorpTag
	err := executeQyapiJSONPost(c, "/cgi-bin/externalcontact/add_corp_tag", req, &resp, true)
	if err != nil {
		return respExternalContactAddCorpTag{}, err
	}

	return resp, nil
}

// execExternalContactEditCorpTag 编辑企业客户标签
func (c *WorkwxApp) execExternalContactEditCorpTag(req reqExternalContactEditCorpTag) (respExternalContactEditCorpTag, error) {
	var resp respExternalContactEditCorpTag
	err := executeQyapiJSONPost(c, "/cgi-bin/externalcontact/edit_corp_tag", req, &resp, true)
	if err != nil {
		return respExternalContactEditCorpTag{}, err
	}

	return resp, nil
}

// execExternalContactDelCorpTag 删除企业客户标签
func (c *WorkwxApp) execExternalContactDelCorpTag(req reqExternalContactDelCorpTag) (respExternalContactDelCorpTag, error) {
	var resp respExternalContactDelCorpTag
	err := executeQyapiJSONPost(c, "/cgi-bin/externalcontact/del_corp_tag", req, &resp, true)
	if err != nil {
		return respExternalContactDelCorpTag{}, err
	}

	return resp, nil
}

// execExternalContactMarkTag 标记客户企业标签
func (c *WorkwxApp) execExternalContactMarkTag(req reqExternalContactMarkTag) (respExternalContactMarkTag, error) {
	var resp respExternalContactMarkTag
	err := executeQyapiJSONPost(c, "/cgi-bin/externalcontact/mark_tag", req, &resp, true)
	if err != nil {
		return respExternalContactMarkTag{}, err
	}

	return resp, nil
}

// execListUnassignedExternalContact 获取离职成员的客户列表
func (c *WorkwxApp) execListUnassignedExternalContact(req reqListUnassignedExternalContact) (respListUnassignedExternalContact, error) {
	var resp respListUnassignedExternalContact
	err := executeQyapiJSONPost(c, "/cgi-bin/externalcontact/get_unassigned_list", req, &resp, true)
	if err != nil {
		return respListUnassignedExternalContact{}, err
	}

	return resp, nil
}

// execTransferExternalContact 分配成员的客户
func (c *WorkwxApp) execTransferExternalContact(req reqTransferExternalContact) (respTransferExternalContact, error) {
	var resp respTransferExternalContact
	err := executeQyapiJSONPost(c, "/cgi-bin/externalcontact/transfer", req, &resp, true)
	if err != nil {
		return respTransferExternalContact{}, err
	}

	return resp, nil
}

// execGetTransferExternalContactResult 查询客户接替结果
func (c *WorkwxApp) execGetTransferExternalContactResult(req reqGetTransferExternalContactResult) (respGetTransferExternalContactResult, error) {
	var resp respGetTransferExternalContactResult
	err := executeQyapiJSONPost(c, "/cgi-bin/externalcontact/get_transfer_result", req, &resp, true)
	if err != nil {
		return respGetTransferExternalContactResult{}, err
	}

	return resp, nil
}

// execTransferGroupChatExternalContact 离职成员的群再分配
func (c *WorkwxApp) execTransferGroupChatExternalContact(req reqTransferGroupChatExternalContact) (respTransferGroupChatExternalContact, error) {
	var resp respTransferGroupChatExternalContact
	err := executeQyapiJSONPost(c, "/cgi-bin/externalcontact/groupchat/transfer", req, &resp, true)
	if err != nil {
		return respTransferGroupChatExternalContact{}, err
	}

	return resp, nil
}

// execAppchatCreate 创建群聊会话
func (c *WorkwxApp) execAppchatCreate(req reqAppchatCreate) (respAppchatCreate, error) {
	var resp respAppchatCreate
	err := executeQyapiJSONPost(c, "/cgi-bin/appchat/create", req, &resp, true)
	if err != nil {
		return respAppchatCreate{}, err
	}

	return resp, nil
}

// execAppchatUpdate 修改群聊会话
func (c *WorkwxApp) execAppchatUpdate(req reqAppchatUpdate) (respAppchatUpdate, error) {
	var resp respAppchatUpdate
	err := executeQyapiJSONPost(c, "/cgi-bin/appchat/update", req, &resp, true)
	if err != nil {
		return respAppchatUpdate{}, err
	}

	return resp, nil
}

// execAppchatGet 获取群聊会话
func (c *WorkwxApp) execAppchatGet(req reqAppchatGet) (respAppchatGet, error) {
	var resp respAppchatGet
	err := executeQyapiGet(c, "/cgi-bin/appchat/get", req, &resp, true)
	if err != nil {
		return respAppchatGet{}, err
	}

	return resp, nil
}

// execMessageSend 发送应用消息
func (c *WorkwxApp) execMessageSend(req reqMessage) (respMessageSend, error) {
	var resp respMessageSend
	err := executeQyapiJSONPost(c, "/cgi-bin/message/send", req, &resp, true)
	if err != nil {
		return respMessageSend{}, err
	}

	return resp, nil
}

// execAppchatSend 应用推送消息
func (c *WorkwxApp) execAppchatSend(req reqMessage) (respMessageSend, error) {
	var resp respMessageSend
	err := executeQyapiJSONPost(c, "/cgi-bin/appchat/send", req, &resp, true)
	if err != nil {
		return respMessageSend{}, err
	}

	return resp, nil
}

// execMediaUpload 上传临时素材
func (c *WorkwxApp) execMediaUpload(req reqMediaUpload) (respMediaUpload, error) {
	var resp respMediaUpload
	err := executeQyapiMediaUpload(c, "/cgi-bin/media/upload", req, &resp, true)
	if err != nil {
		return respMediaUpload{}, err
	}

	return resp, nil
}

// execMediaUploadImg 上传永久图片
func (c *WorkwxApp) execMediaUploadImg(req reqMediaUploadImg) (respMediaUploadImg, error) {
	var resp respMediaUploadImg
	err := executeQyapiMediaUpload(c, "/cgi-bin/media/uploadimg", req, &resp, true)
	if err != nil {
		return respMediaUploadImg{}, err
	}

	return resp, nil
}

// execOAGetTemplateDetail 获取审批模板详情
func (c *WorkwxApp) execOAGetTemplateDetail(req reqOAGetTemplateDetail) (respOAGetTemplateDetail, error) {
	var resp respOAGetTemplateDetail
	err := executeQyapiJSONPost(c, "/cgi-bin/oa/gettemplatedetail", req, &resp, true)
	if err != nil {
		return respOAGetTemplateDetail{}, err
	}

	return resp, nil
}

// execOAApplyEvent 提交审批申请
func (c *WorkwxApp) execOAApplyEvent(req reqOAApplyEvent) (respOAApplyEvent, error) {
	var resp respOAApplyEvent
	err := executeQyapiJSONPost(c, "/cgi-bin/oa/applyevent", req, &resp, true)
	if err != nil {
		return respOAApplyEvent{}, err
	}

	return resp, nil
}

// execOAGetApprovalInfo 批量获取审批单号
func (c *WorkwxApp) execOAGetApprovalInfo(req reqOAGetApprovalInfo) (respOAGetApprovalInfo, error) {
	var resp respOAGetApprovalInfo
	err := executeQyapiJSONPost(c, "/cgi-bin/oa/getapprovalinfo", req, &resp, true)
	if err != nil {
		return respOAGetApprovalInfo{}, err
	}

	return resp, nil
}

// execOAGetApprovalDetail 获取审批申请详情
func (c *WorkwxApp) execOAGetApprovalDetail(req reqOAGetApprovalDetail) (respOAGetApprovalDetail, error) {
	var resp respOAGetApprovalDetail
	err := executeQyapiJSONPost(c, "/cgi-bin/oa/getapprovaldetail", req, &resp, true)
	if err != nil {
		return respOAGetApprovalDetail{}, err
	}

	return resp, nil
}

// execOAGetCorpVacationConf 获取企业假期管理配置
func (c *WorkwxApp) execOAGetCorpVacationConf(req reqOAGetCorpVacationConf) (respOAGetCorpVacationConf, error) {
	var resp respOAGetCorpVacationConf
	err := executeQyapiGet(c, "/cgi-bin/oa/vacation/getcorpconf", req, &resp, true)
	if err != nil {
		return respOAGetCorpVacationConf{}, err
	}

	return resp, nil
}

// execOAGetUserVacationQuota 获取成员假期余额
func (c *WorkwxApp) execOAGetUserVacationQuota(req reqOAGetUserVacationQuota) (respOAGetUserVacationQuota, error) {
	var resp respOAGetUserVacationQuota
	err := executeQyapiJSONPost(c, "/cgi-bin/oa/vacation/getuservacationquota", req, &resp, true)
	if err != nil {
		return respOAGetUserVacationQuota{}, err
	}

	return resp, nil
}

// execOASetOneUserVacationQuota 修改成员假期余额
func (c *WorkwxApp) execOASetOneUserVacationQuota(req reqOASetOneUserVacationQuota) (respOASetOneUserVacationQuota, error) {
	var resp respOASetOneUserVacationQuota
	err := executeQyapiJSONPost(c, "/cgi-bin/oa/vacation/setoneuserquota", req, &resp, true)
	if err != nil {
		return respOASetOneUserVacationQuota{}, err
	}

	return resp, nil
}

// execMsgAuditListPermitUser 获取会话内容存档开启成员列表
func (c *WorkwxApp) execMsgAuditListPermitUser(req reqMsgAuditListPermitUser) (respMsgAuditListPermitUser, error) {
	var resp respMsgAuditListPermitUser
	err := executeQyapiJSONPost(c, "/cgi-bin/msgaudit/get_permit_user_list", req, &resp, true)
	if err != nil {
		return respMsgAuditListPermitUser{}, err
	}

	return resp, nil
}

// execMsgAuditCheckSingleAgree 获取会话同意情况（单聊）
func (c *WorkwxApp) execMsgAuditCheckSingleAgree(req reqMsgAuditCheckSingleAgree) (respMsgAuditCheckSingleAgree, error) {
	var resp respMsgAuditCheckSingleAgree
	err := executeQyapiJSONPost(c, "/cgi-bin/msgaudit/check_single_agree", req, &resp, true)
	if err != nil {
		return respMsgAuditCheckSingleAgree{}, err
	}

	return resp, nil
}

// execMsgAuditCheckRoomAgree 获取会话同意情况（群聊）
func (c *WorkwxApp) execMsgAuditCheckRoomAgree(req reqMsgAuditCheckRoomAgree) (respMsgAuditCheckRoomAgree, error) {
	var resp respMsgAuditCheckRoomAgree
	err := executeQyapiJSONPost(c, "/cgi-bin/msgaudit/check_room_agree", req, &resp, true)
	if err != nil {
		return respMsgAuditCheckRoomAgree{}, err
	}

	return resp, nil
}

// execMsgAuditGetGroupChat 获取会话内容存档内部群信息
func (c *WorkwxApp) execMsgAuditGetGroupChat(req reqMsgAuditGetGroupChat) (respMsgAuditGetGroupChat, error) {
	var resp respMsgAuditGetGroupChat
	err := executeQyapiJSONPost(c, "/cgi-bin/msgaudit/groupchat/get", req, &resp, true)
	if err != nil {
		return respMsgAuditGetGroupChat{}, err
	}

	return resp, nil
}

// execListFollowUserExternalContact 获取配置了客户联系功能的成员列表
func (c *WorkwxApp) execListFollowUserExternalContact(req reqListFollowUserExternalContact) (respListFollowUserExternalContact, error) {
	var resp respListFollowUserExternalContact
	err := executeQyapiGet(c, "/cgi-bin/externalcontact/get_follow_user_list", req, &resp, true)
	if err != nil {
		return respListFollowUserExternalContact{}, err
	}

	return resp, nil
}

// execAddContactExternalContact 配置客户联系「联系我」方式
func (c *WorkwxApp) execAddContactExternalContact(req reqAddContactExternalContact) (respAddContactExternalContact, error) {
	var resp respAddContactExternalContact
	err := executeQyapiJSONPost(c, "/cgi-bin/externalcontact/add_contact_way", req, &resp, true)
	if err != nil {
		return respAddContactExternalContact{}, err
	}

	return resp, nil
}

// execGetContactWayExternalContact 获取企业已配置的「联系我」方式
func (c *WorkwxApp) execGetContactWayExternalContact(req reqGetContactWayExternalContact) (respGetContactWayExternalContact, error) {
	var resp respGetContactWayExternalContact
	err := executeQyapiJSONPost(c, "/cgi-bin/externalcontact/get_contact_way", req, &resp, true)
	if err != nil {
		return respGetContactWayExternalContact{}, err
	}

	return resp, nil
}

// execListContactWayChatExternalContact 获取企业已配置的「联系我」列表
func (c *WorkwxApp) execListContactWayChatExternalContact(req reqListContactWayExternalContact) (respListContactWayChatExternalContact, error) {
	var resp respListContactWayChatExternalContact
	err := executeQyapiJSONPost(c, "/cgi-bin/externalcontact/list_contact_way", req, &resp, true)
	if err != nil {
		return respListContactWayChatExternalContact{}, err
	}

	return resp, nil
}

// execUpdateContactWayExternalContact 更新企业已配置的「联系我」成员配置
func (c *WorkwxApp) execUpdateContactWayExternalContact(req reqUpdateContactWayExternalContact) (respUpdateContactWayExternalContact, error) {
	var resp respUpdateContactWayExternalContact
	err := executeQyapiJSONPost(c, "/cgi-bin/externalcontact/update_contact_way", req, &resp, true)
	if err != nil {
		return respUpdateContactWayExternalContact{}, err
	}

	return resp, nil
}

// execDelContactWayExternalContact 删除企业已配置的「联系我」方式
func (c *WorkwxApp) execDelContactWayExternalContact(req reqDelContactWayExternalContact) (respDelContactWayExternalContact, error) {
	var resp respDelContactWayExternalContact
	err := executeQyapiJSONPost(c, "/cgi-bin/externalcontact/del_contact_way", req, &resp, true)
	if err != nil {
		return respDelContactWayExternalContact{}, err
	}

	return resp, nil
}

// execCloseTempChatExternalContact 结束临时会话
func (c *WorkwxApp) execCloseTempChatExternalContact(req reqCloseTempChatExternalContact) (respCloseTempChatExternalContact, error) {
	var resp respCloseTempChatExternalContact
	err := executeQyapiJSONPost(c, "/cgi-bin/externalcontact/close_temp_chat", req, &resp, true)
	if err != nil {
		return respCloseTempChatExternalContact{}, err
	}

	return resp, nil
}

// execAddGroupChatJoinWayExternalContact 配置客户群「加入群聊」方式
func (c *WorkwxApp) execAddGroupChatJoinWayExternalContact(req reqAddGroupChatJoinWayExternalContact) (respAddGroupChatJoinWayExternalContact, error) {
	var resp respAddGroupChatJoinWayExternalContact
	err := executeQyapiJSONPost(c, "/cgi-bin/externalcontact/groupchat/add_join_way", req, &resp, true)
	if err != nil {
		return respAddGroupChatJoinWayExternalContact{}, err
	}

	return resp, nil
}

// execGetGroupChatJoinWayExternalContact 获取企业已配置的客户群「加入群聊」方式
func (c *WorkwxApp) execGetGroupChatJoinWayExternalContact(req reqGetGroupChatJoinWayExternalContact) (respGetGroupChatJoinWayExternalContact, error) {
	var resp respGetGroupChatJoinWayExternalContact
	err := executeQyapiJSONPost(c, "/cgi-bin/externalcontact/groupchat/get_join_way", req, &resp, true)
	if err != nil {
		return respGetGroupChatJoinWayExternalContact{}, err
	}

	return resp, nil
}

// execUpdateGroupChatJoinWayExternalContact 更新企业已配置的客户群「加入群聊」方式
func (c *WorkwxApp) execUpdateGroupChatJoinWayExternalContact(req reqUpdateGroupChatJoinWayExternalContact) (respUpdateGroupChatJoinWayExternalContact, error) {
	var resp respUpdateGroupChatJoinWayExternalContact
	err := executeQyapiJSONPost(c, "/cgi-bin/externalcontact/groupchat/update_join_way", req, &resp, true)
	if err != nil {
		return respUpdateGroupChatJoinWayExternalContact{}, err
	}

	return resp, nil
}

// execDelGroupChatJoinWayExternalContact 删除企业已配置的客户群「加入群聊」方式
func (c *WorkwxApp) execDelGroupChatJoinWayExternalContact(req reqDelGroupChatJoinWayExternalContact) (respDelGroupChatJoinWayExternalContact, error) {
	var resp respDelGroupChatJoinWayExternalContact
	err := executeQyapiJSONPost(c, "/cgi-bin/externalcontact/groupchat/del_join_way", req, &resp, true)
	if err != nil {
		return respDelGroupChatJoinWayExternalContact{}, err
	}

	return resp, nil
}

// execGroupChatListGet 获取客户群列表
func (c *WorkwxApp) execGroupChatListGet(req reqGroupChatList) (respGroupChatList, error) {
	var resp respGroupChatList
	err := executeQyapiJSONPost(c, "/cgi-bin/externalcontact/groupchat/list", req, &resp, true)
	if err != nil {
		return respGroupChatList{}, err
	}

	return resp, nil
}

// execGroupChatInfoGet 获取客户群详细
func (c *WorkwxApp) execGroupChatInfoGet(req reqGroupChatInfo) (respGroupChatInfo, error) {
	var resp respGroupChatInfo
	err := executeQyapiJSONPost(c, "/cgi-bin/externalcontact/groupchat/get", req, &resp, true)
	if err != nil {
		return respGroupChatInfo{}, err
	}

	return resp, nil
}

// execConvertOpenGIDToChatID 客户群opengid转换
func (c *WorkwxApp) execConvertOpenGIDToChatID(req reqConvertOpenGIDToChatID) (respConvertOpenGIDToChatID, error) {
	var resp respConvertOpenGIDToChatID
	err := executeQyapiJSONPost(c, "/cgi-bin/externalcontact/opengid_to_chatid", req, &resp, true)
	if err != nil {
		return respConvertOpenGIDToChatID{}, err
	}

	return resp, nil
}

// execTransferCustomer 在职继承 分配在职成员的客户
func (c *WorkwxApp) execTransferCustomer(req reqTransferCustomer) (respTransferCustomer, error) {
	var resp respTransferCustomer
	err := executeQyapiJSONPost(c, "/cgi-bin/externalcontact/transfer_customer", req, &resp, true)
	if err != nil {
		return respTransferCustomer{}, err
	}

	return resp, nil
}

// execGetTransferCustomerResult 在职继承 查询客户接替状态
func (c *WorkwxApp) execGetTransferCustomerResult(req reqGetTransferCustomerResult) (respGetTransferCustomerResult, error) {
	var resp respGetTransferCustomerResult
	err := executeQyapiJSONPost(c, "/cgi-bin/externalcontact/transfer_result", req, &resp, true)
	if err != nil {
		return respGetTransferCustomerResult{}, err
	}

	return resp, nil
}

// execTransferResignedCustomer 离职继承 分配离职成员的客户
func (c *WorkwxApp) execTransferResignedCustomer(req reqTransferCustomer) (respTransferCustomer, error) {
	var resp respTransferCustomer
	err := executeQyapiJSONPost(c, "/cgi-bin/externalcontact/resigned/transfer_customer", req, &resp, true)
	if err != nil {
		return respTransferCustomer{}, err
	}

	return resp, nil
}

// execGetTransferResignedCustomerResult 离职继承 查询客户接替状态
func (c *WorkwxApp) execGetTransferResignedCustomerResult(req reqGetTransferCustomerResult) (respGetTransferCustomerResult, error) {
	var resp respGetTransferCustomerResult
	err := executeQyapiJSONPost(c, "/cgi-bin/externalcontact/resigned/transfer_result", req, &resp, true)
	if err != nil {
		return respGetTransferCustomerResult{}, err
	}

	return resp, nil
}

// execAddMsgTemplate 创建企业群发
func (c *WorkwxApp) execAddMsgTemplate(req reqAddMsgTemplateExternalContact) (respAddMsgTemplateExternalContact, error) {
	var resp respAddMsgTemplateExternalContact
	err := executeQyapiJSONPost(c, "/cgi-bin/externalcontact/add_msg_template", req, &resp, true)
	if err != nil {
		return respAddMsgTemplateExternalContact{}, err
	}

	return resp, nil
}

// execSendWelcomeMsg 发送新客户欢迎语
func (c *WorkwxApp) execSendWelcomeMsg(req reqSendWelcomeMsgExternalContact) (respSendWelcomeMsgExternalContact, error) {
	var resp respSendWelcomeMsgExternalContact
	err := executeQyapiJSONPost(c, "/cgi-bin/externalcontact/send_welcome_msg", req, &resp, true)
	if err != nil {
		return respSendWelcomeMsgExternalContact{}, err
	}

	return resp, nil
}

// execKfAccountCreate 添加客服账号
func (c *WorkwxApp) execKfAccountCreate(req reqKfAccountCreate) (respKfAccountCreate, error) {
	var resp respKfAccountCreate
	err := executeQyapiJSONPost(c, "/cgi-bin/kf/account/add", req, &resp, true)
	if err != nil {
		return respKfAccountCreate{}, err
	}

	return resp, nil
}

// execKfAccountUpdate 修改客服账号
func (c *WorkwxApp) execKfAccountUpdate(req reqKfAccountUpdate) (respKfAccountUpdate, error) {
	var resp respKfAccountUpdate
	err := executeQyapiJSONPost(c, "/cgi-bin/kf/account/update", req, &resp, true)
	if err != nil {
		return respKfAccountUpdate{}, err
	}

	return resp, nil
}

// execKfAccountDelete 删除客服账号
func (c *WorkwxApp) execKfAccountDelete(req reqKfAccountDelete) (respKfAccountDelete, error) {
	var resp respKfAccountDelete
	err := executeQyapiJSONPost(c, "/cgi-bin/kf/account/del", req, &resp, true)
	if err != nil {
		return respKfAccountDelete{}, err
	}

	return resp, nil
}

// execKfAccountList 获取客服账号列表
func (c *WorkwxApp) execKfAccountList(req reqKfAccountList) (respKfAccountList, error) {
	var resp respKfAccountList
	err := executeQyapiGet(c, "/cgi-bin/kf/account/list", req, &resp, true)
	if err != nil {
		return respKfAccountList{}, err
	}

	return resp, nil
}

// execAddKfContact 获取客服账号链接
func (c *WorkwxApp) execAddKfContact(req reqAddKfContact) (respAddKfContact, error) {
	var resp respAddKfContact
	err := executeQyapiJSONPost(c, "/cgi-bin/kf/add_contact_way", req, &resp, true)
	if err != nil {
		return respAddKfContact{}, err
	}

	return resp, nil
}

// execKfServicerCreate 添加接待人员
func (c *WorkwxApp) execKfServicerCreate(req reqKfServicerCreate) (respKfServicerCreate, error) {
	var resp respKfServicerCreate
	err := executeQyapiJSONPost(c, "/cgi-bin/kf/servicer/add", req, &resp, true)
	if err != nil {
		return respKfServicerCreate{}, err
	}

	return resp, nil
}

// execKfServicerDelete 删除接待人员
func (c *WorkwxApp) execKfServicerDelete(req reqKfServicerDelete) (respKfServicerDelete, error) {
	var resp respKfServicerDelete
	err := executeQyapiJSONPost(c, "/cgi-bin/kf/servicer/del", req, &resp, true)
	if err != nil {
		return respKfServicerDelete{}, err
	}

	return resp, nil
}

// execKfServicerList 获取接待人员列表
func (c *WorkwxApp) execKfServicerList(req reqKfServicerList) (respKfServicerList, error) {
	var resp respKfServicerList
	err := executeQyapiGet(c, "/cgi-bin/kf/servicer/list", req, &resp, true)
	if err != nil {
		return respKfServicerList{}, err
	}

	return resp, nil
}

// execKfServiceStateGet 获取会话状态
func (c *WorkwxApp) execKfServiceStateGet(req reqKfServiceStateGet) (respKfServiceStateGet, error) {
	var resp respKfServiceStateGet
	err := executeQyapiJSONPost(c, "/cgi-bin/kf/service_state/get", req, &resp, true)
	if err != nil {
		return respKfServiceStateGet{}, err
	}

	return resp, nil
}

// execKfServiceStateTrans 变更会话状态
func (c *WorkwxApp) execKfServiceStateTrans(req reqKfServiceStateTrans) (respKfServiceStateTrans, error) {
	var resp respKfServiceStateTrans
	err := executeQyapiJSONPost(c, "/cgi-bin/kf/service_state/trans", req, &resp, true)
	if err != nil {
		return respKfServiceStateTrans{}, err
	}

	return resp, nil
}

// execKfSyncMsg 读取消息
func (c *WorkwxApp) execKfSyncMsg(req reqKfSyncMsg) (respKfSyncMsg, error) {
	var resp respKfSyncMsg
	err := executeQyapiJSONPost(c, "/cgi-bin/kf/sync_msg", req, &resp, true)
	if err != nil {
		return respKfSyncMsg{}, err
	}

	return resp, nil
}

// execKfSend 发送消息
func (c *WorkwxApp) execKfSend(req reqMessage) (respMessageSend, error) {
	var resp respMessageSend
	err := executeQyapiJSONPost(c, "/cgi-bin/kf/send_msg", req, &resp, true)
	if err != nil {
		return respMessageSend{}, err
	}

	return resp, nil
}

// execKfOnEventSend 发送欢迎语等事件响应消息
func (c *WorkwxApp) execKfOnEventSend(req reqMessage) (respMessageSend, error) {
	var resp respMessageSend
	err := executeQyapiJSONPost(c, "/cgi-bin/kf/send_msg_on_event", req, &resp, true)
	if err != nil {
		return respMessageSend{}, err
	}

	return resp, nil
}
